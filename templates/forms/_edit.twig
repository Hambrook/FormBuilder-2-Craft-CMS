{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% set bodyClass = 'formbuilder fb-new-form' %}
{% set pageSlug = craft.request.lastSegment %}

{% block pageHeader %}
  {% include 'formbuilder2/partials/header' %}
{% endblock %}

{% block main %}
  {% if pageSlug == 'edit' %}
    {% set page = 'Edit Form' %}
  {% else %}
    {% set page = 'New Form' %}
  {% endif %}

  {% include 'formbuilder2/partials/sidebar' %} 

  <section id="fb-content">
    <header class="page-header">
      <h1><svg class="icon"><use xlink:href="#icon-edit" class="icon-edit"/></svg> {{ page|t }}</h1>
    </header>

    <div class="forms pane">
      <form method="post" accept-charset="UTF-8" data-saveshortcut="1">
        <input type="hidden" name="action" value="formBuilder2/form/saveForm">
        <input type="hidden" name="redirect" value="formbuilder2/forms">

        {% if form.id %}<input type="hidden" name="formId" value="{{ form.id }}">{% endif %}
        
        <div class="menu-tabs">
          <h2 class="current tab-toggle-form-settings"><a href="#form-settings">{{ "Form Settings"|t }}</a></h2>
          <h2 class="tab-toggle-spam-protection"><a href="#spam-protection">{{ "Spam Protection"|t }}</a></h2>
          <h2 class="tab-toggle-messages"><a href="#messages">{{ "Messages"|t }}</a></h2>
          <h2 class="tab-toggle-notify"><a href="#notify">{{ "Notifications"|t }}</a></h2>
          <h2 class="tab-toggle-fields"><a href="#fields">{{ "Fields"|t }}</a></h2>
        </div>

        <div class="tabs-container">

          <div id="form-settings" class="tab-content">
            {% set ajaxUploadErrors = form.getErrors('cannotUseFileUploadAndAjax') %}

            {{ forms.textField({
              first: true,
              label: "Form Name"|t,
              instructions: "Give this form a name."|t,
              id: 'name',
              name: 'name',
              value: form.name,
              errors: form.getErrors('name'),
              autofocus: true,
              required: true,
              size: 50,
              translatable: true
            }) }}

            {{ forms.textField({
              label: "Handle"|t,
              instructions: "How youâ€™ll refer to this form in the templates."|t,
              id: 'handle',
              class: 'code',
              name: 'handle',
              value: form.handle,
              size: 50,
              errors: form.getErrors('handle'),
              required: true
            }) }}

            <div class="method-database pane">
              <div class="checkbox-toggle" data-checkbox="saveSubmissionsToDatabase">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-database" class="icon-database"/></svg>
                   {{ forms.checkboxField({
                    id: 'saveSubmissionsToDatabase',
                    class: 'saveSubmissionsToDatabase',
                    name: 'saveSubmissionsToDatabase',
                    value: 1,
                    checked: form.saveSubmissionsToDatabase,
                    errors: form.getErrors('saveSubmissionsToDatabase'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Save Submissions To Database?"|t }}</h3>
                  <p>{{ "All submissions made by this form will be saved to database."|t }}</p>
                </div>
              </div>
            </div>

            <div class="method-redirect pane">
              <div class="checkbox-toggle" data-checkbox="customRedirect">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-redirect" class="icon-redirect"/></svg>
                   {{ forms.checkboxField({
                    id: 'customRedirect',
                    class: 'customRedirect',
                    name: 'customRedirect',
                    value: 1,
                    checked: form.customRedirect,
                    errors: form.getErrors('customRedirect'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Use Custom Redirect"|t }}</h3>
                  <p>{{ "Upon form submission redirect to custom success page. By default it redirects to form page."|t }}</p>
                </div>
              </div>
              <div class="checkbox-extra">
                {{ forms.textField({
                  label: "Redirect URL"|t,
                  instructions: "Enter relative redirect page url."|t,
                  id: 'customRedirectUrl',
                  class: 'customRedirectUrl',
                  name: 'customRedirectUrl',
                  value: form.customRedirectUrl,
                  size: 50,
                  errors: form.getErrors('customRedirectUrl'),
                  required: false
                }) }}
              </div>
            </div>

            <div class="method-files pane{% if ajaxUploadErrors %} errors toggle-error{% endif %}">
              <div class="checkbox-toggle" data-checkbox="hasFileUploads">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-upload" class="icon-upload"/></svg>
                   {{ forms.checkboxField({
                    id: 'hasFileUploads',
                    class: 'hasFileUploads',
                    name: 'hasFileUploads',
                    value: 1,
                    checked: form.hasFileUploads,
                    errors: form.getErrors('hasFileUploads'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Has Files Uploads"|t }}</h3>
                  <p>{{ "Will this form upload any files?"|t }}</p>
                </div>
              </div>
            </div>

            <div class="method-ajax pane{% if ajaxUploadErrors %} errors toggle-error{% endif %}">
              <div class="checkbox-toggle" data-checkbox="ajaxSubmit">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-rocket" class="icon-rocket"/></svg>
                   {{ forms.checkboxField({
                    id: 'ajaxSubmit',
                    class: 'ajaxSubmit',
                    name: 'ajaxSubmit',
                    value: 1,
                    checked: form.ajaxSubmit,
                    errors: form.getErrors('ajaxSubmit'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Use AJAX?"|t }}</h3>
                  <p>{{ "Should we submit the form via ajax? No page refresh will happen."|t }}</p>
                </div>
              </div>
            </div>
            
            {% for ajaxError in ajaxUploadErrors %}
              <h2 class="toggle-error">{{ ajaxError }}</h2>
            {% endfor %}
          </div>

          <div id="spam-protection" class="tab-content">
            <div class="method-time pane">
              <div class="checkbox-toggle" data-checkbox="spamTimeMethod">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-timer" class="icon-timer"/></svg>
                   {{ forms.checkboxField({
                    id: 'spamTimeMethod',
                    class: 'spamTimeMethod',
                    name: 'spamTimeMethod',
                    value: 1,
                    checked: form.spamTimeMethod,
                    errors: form.getErrors('spamTimeMethod'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Timed Submissions"|t }}</h3>
                  <p>{{ "Allow minimum time to submit a form."|t }}</p>
                </div>
              </div>
              
              <div class="checkbox-extra">
                {{ forms.textField({
                  label: "Time"|t,
                  instructions: "Enter how many seconds to wait untill submissions are valid."|t,
                  id: 'spamTimeMethodTime',
                  class: 'spamTimeMethodTime',
                  name: 'spamTimeMethodTime',
                  value: form.spamTimeMethodTime,
                  size: 50,
                  errors: form.getErrors('spamTimeMethodTime'),
                  required: false
                }) }}
              </div>
            </div>

            <div class="method-honeypot pane">
              
              <div class="checkbox-toggle" data-checkbox="spamHoneypotMethod">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-target" class="icon-target"/></svg>
                   {{ forms.checkboxField({
                    id: 'spamHoneypotMethod',
                    class: 'spamHoneypotMethod',
                    name: 'spamHoneypotMethod',
                    value: 1,
                    checked: form.spamHoneypotMethod,
                    errors: form.getErrors('spamHoneypotMethod'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Honeypot"|t }}</h3>
                  <p>{{ "String matching spam protection."|t }}</p>
                </div>
              </div>

              <div class="checkbox-extra">
                {{ forms.textField({
                  label: "Honeypot Input Message"|t,
                  instructions: "Enter message for screen readers."|t,
                  id: 'spamHoneypotMethodMessage',
                  class: 'spamHoneypotMethodMessage',
                  name: 'spamHoneypotMethodMessage',
                  value: form.spamHoneypotMethodMessage ? form.spamHoneypotMethodMessage : null,
                  size: 50,
                  errors: form.getErrors('spamHoneypotMethodMessage'),
                  required: false
                }) }}
              </div>
            </div>
          </div>

          <div id="messages" class="tab-content">
            {{ forms.textField({
              label: "Success Message"|t,
              instructions: "Please enter success message."|t,
              id: 'successMessage',
              class: 'successMessage',
              name: 'successMessage',
              value: form.successMessage,
              size: 100,
              errors: form.getErrors('successMessage'),
              required: true
            }) }}

            {{ forms.textField({
              label: "Error Message"|t,
              instructions: "Please enter error message."|t,
              id: 'errorMessage',
              class: 'errorMessage',
              name: 'errorMessage',
              value: form.errorMessage,
              size: 100,
              errors: form.getErrors('errorMessage'),
              required: true
            }) }}
          </div>

          <div id="notify" class="tab-content">

            <div class="method-notify pane">
              <div class="checkbox-toggle" data-checkbox="notifySubmission">
                <div class="togglebox">
                  <svg><use xlink:href="#icon-notify" class="icon-notify"/></svg>
                   {{ forms.checkboxField({
                    id: 'notifySubmission',
                    class: 'notifySubmission',
                    name: 'notifySubmission',
                    value: 1,
                    checked: form.notifySubmission,
                    errors: form.getErrors('notifySubmission'),
                    required: false
                  }) }}
                </div>
                <div class="togglecontent">
                  <h3>{{ "Notify Admin of Submissions"|t }}</h3>
                  <p>{{ "Notify admin of form submission."|t }}</p>
                </div>
              </div>
              <div class="checkbox-extra">
                {{ forms.textField({
                  label: "Notification Email"|t,
                  instructions: "Where should submission notification be sent to?"|t,
                  id: 'notifyEmail',
                  class: 'notifyEmail',
                  name: 'notifyEmail',
                  value: form.notifyEmail,
                  size: 50,
                  errors: form.getErrors('notifyEmail'),
                  required: false
                }) }}

                {{ forms.textField({
                  label: "Email Subject"|t,
                  instructions: "Subject line for email notifications."|t,
                  id: 'emailSubject',
                  class: 'emailSubject',
                  name: 'emailSubject',
                  value: form.emailSubject,
                  size: 50,
                  errors: form.getErrors('emailSubject'),
                  required: false
                }) }}
              </div>
            </div>

          </div>

          <div id="fields" class="tab-content">
            {% include "formbuilder2/inputs/fieldlayoutdesigner" with {
              fieldLayout: form.getFieldLayout(),
              customizableTabs: true
            } only %}
          </div>

        </div>

        {# Errors #}
        {%- set errors = (errors is defined ? errors : null) -%}
        {% if errors %}
          {% include "formbuilder2/templates/inputs/errorList" with { errors: errors } %}
        {% endif %}

        <div class="buttons">
          <input type="submit" class="btn submit" value="{{ 'Save'|t }}">
        </div>

      </form>


    </div>

    {# No Forms #}
    <div class="no-forms" style="display: none;">
      <p>{{ "Hello! You don't have any forms yet."|t }}</p>
      <a href="#" class="create-form-button"><svg><use xlink:href="#icon-text" class="icon-text"/></svg> <span>{{ "Create a Form"|t }}</span></a>
    </div>

  </section>

{% endblock %}

{% set newFormJs %}
  {% if not form.handle %}new Craft.HandleGenerator('#name', '#handle');{% endif %}
{% endset %}
{% includeJs newFormJs %}
